require('dotenv').config();
const express = require('express');
const axios = require('axios');
const cors = require('cors');

const app = express();
app.use(express.json());
app.use(cors());

const HUGGINGFACE_API_KEY = process.env.HUGGINGFACE_API_KEY;

app.post('/generate-recipe', async (req, res) => {
    try {
        const { ingredients } = req.body;

        // Validate ingredients input
        if (!Array.isArray(ingredients) || ingredients.length === 0) {
            return res.status(400).json({ error: "Ingredients must be a non-empty array." });
        }

        console.log('ingredients:', ingredients);
        console.log('isArray:', Array.isArray(ingredients));        

        const prompt = `
You are a world-class professional chef, renowned for creating delicious and easy-to-follow recipes. 
Your task is to generate a unique and mouth-watering recipe based on the following ingredients: 
            
${ingredients.join(", ")}.

### Guidelines:
- Provide a clear **recipe name**.
- List **ingredients with exact measurements**.
- Offer **step-by-step cooking instructions** in a **friendly and engaging** tone.
- Suggest **serving tips, pairings, or variations** to enhance the dish.
- If any ingredient is missing for a complete dish, suggest **substitutes**.
- Keep it **simple and easy to follow**, making sure both beginners and experienced cooks can enjoy it.

Now, generate the perfect recipe with these ingredients!
        `;

        const response = await axios.post(
            "https://api-inference.huggingface.co/models/mistralai/Mistral-7B-Instruct-v0.1",
            { inputs: prompt },
            { headers: { Authorization: `Bearer ${HUGGINGFACE_API_KEY}` } }
        );

        console.log("Response from Hugging Face:", response.data);

        res.json({ recipe: response.data });
    } catch (error) {
        console.error("Error fetching data from Hugging Face:", error.response?.data || error.message);
        res.status(500).json({ 
            error: "Error generating recipe", 
            details: error.response?.data || error.message 
        });
    }
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`ðŸš€ Server running on http://localhost:${PORT}`));
